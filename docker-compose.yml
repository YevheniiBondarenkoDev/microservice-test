version: '3.8'

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "${MONGO_PORT}:${MONGO_PORT}"
    volumes:
      - "${MONGO_VOLUME}:/data/db"
    healthcheck:
      test: echo "db.runCommand("ping").ok"
      interval: 10s
      timeout: 5s
      retries: 3
  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "${RABBITMQ_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_PORT}:${RABBITMQ_MANAGEMENT_PORT}"
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
    healthcheck:
      test: [ "CMD", "rabbitmq-diagnostics", "ping" ]
      interval: 10s
      timeout: 5s
      retries: 3

  user-service:
    build:
      context: ./user-service
      dockerfile: Dockerfile
    container_name: user-service
    ports:
      - "${USER_SERVICE_PORT}:${USER_SERVICE_PORT}"
    env_file:
      - ./user-service/.env
    depends_on:
      mongodb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy

  notification-service:
    build:
      context: ./notification-service
    container_name: notification-service
    ports:
      - "${NOTIFICATION_SERVICE_PORT}:${NOTIFICATION_SERVICE_PORT}"
    env_file:
      - ./notification-service/.env
    depends_on:
      rabbitmq:
        condition: service_healthy

volumes:
  mongo-data:
